{"version":3,"sources":["helper/helper.js","services/items.js","reducers/items.js","components/Items.js","components/Item.js","services/login.js","reducers/login.js","components/LoginForm.js","components/AdminLoginForm.js","components/Auth.js","App.js","store.js","index.js"],"names":["checkLogged","loggedAdminJSON","window","localStorage","getItem","admin","JSON","parse","loggedUserJSON","user","headers","auth","token","loggedUserToken","getAll","a","config","helper","axios","get","response","data","id","itemsReducer","state","action","type","Items","items","useSelector","console","log","map","item","key","to","name","category","review","Item","itemId","useParams","find","description","login","credentials","post","res","adminLogin","setUser","signIn","email","password","dispatch","loginService","loggedUser","setItem","stringify","adminSignIn","adminPin","loggedAdmin","loginReducer","LoginForm","useState","setEmail","setPassword","useDispatch","history","useHistory","handleLogin","event","preventDefault","push","onSubmit","placeholder","value","onChange","target","onClick","AdminLoginForm","setAdminPin","handleAdminLogin","Auth","logged","signout","removeItem","signOutButton","switchToUser","role","App","useEffect","itemService","className","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8f2927c.chunk.js","sourcesContent":["// Check loggedUser returns Admin if Admin Token is found else return User token else null\r\nconst checkLogged = () => {\r\n  const loggedAdminJSON = window.localStorage.getItem(\"loggedRatingAppAdmin\");\r\n  const admin = JSON.parse(loggedAdminJSON);\r\n  if (admin) {\r\n    return admin;\r\n  }\r\n  const loggedUserJSON = window.localStorage.getItem(\"loggedRatingAppUser\");\r\n  const user = JSON.parse(loggedUserJSON);\r\n  if (user) {\r\n    return user;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Token of the LoggedIn\r\nconst loggedUserToken = () => {\r\n  const user = checkLogged();\r\n  if (user) {\r\n    return `bearer ${user.token}`;\r\n  } else return null;\r\n};\r\n\r\nconst loggedUserConfig = () => {\r\n  const token = loggedUserToken();\r\n  const config = {\r\n    headers: { auth: token },\r\n  };\r\n  return config;\r\n};\r\n\r\nexport default { checkLogged, loggedUserConfig };\r\n","import axios from \"axios\";\r\nimport helper from \"../helper/helper\";\r\nconst baseUrl = \"/api/items\";\r\n\r\n// Fetching all the Items\r\nconst getAll = async () => {\r\n  const config = helper.loggedUserConfig();\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\n// Fetching a single item\r\nconst getItem = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, getItem };\r\n","import itemService from \"../services/items\";\r\n\r\nexport const initializeItems = () => {\r\n  return async (dispatch) => {\r\n    const items = await itemService.getAll();\r\n    dispatch({\r\n      type: \"INIT_ITEMS\",\r\n      data: items,\r\n    });\r\n  };\r\n};\r\n\r\nexport const getItem = (id) => {\r\n  return async (dispatch) => {\r\n    const item = await itemService.getItem(id);\r\n    dispatch({\r\n      type: \"GET_ITEM\",\r\n      data: item,\r\n    });\r\n  };\r\n};\r\n\r\nconst itemsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_ITEMS\":\r\n      return action.data;\r\n    case \"GET_ITEM\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReducer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Items = () => {\r\n  // Main Items to be reviewed\r\n  const items = useSelector((state) => state.items);\r\n\r\n  if (!items) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"Items: \", items);\r\n\r\n  const show = () => {\r\n    return items.map((item) => (\r\n      <div key={item.id}>\r\n        <Link to={`/items/${item.id}`}>\r\n          <b> {item.name}</b>\r\n        </Link>\r\n        <h3>{item.category}</h3>\r\n        <p>{item.review ? \"Reviews stack returned \" : \"No Review Array\"}</p>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Item = () => {\r\n  // Main Items to be reviewed\r\n  const items = useSelector((state) => state.items);\r\n  // Item to be shown\r\n  const itemId = useParams().id;\r\n  const item = items.find((item) => item.id === itemId);\r\n\r\n  if (!item) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"Item: \", item);\r\n\r\n  const show = () => {\r\n    return (\r\n      <div key={item.id}>\r\n        <h3>Details</h3>\r\n        <b>{item.name}</b>\r\n        <h3>Category: {item.category}</h3>\r\n        <p>{item.description}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Item;\r\n","import axios from \"axios\";\r\nimport helper from \"../helper/helper\";\r\nconst baseUrl = \"/api/login\";\r\nconst adminUrl = \"/api/login/admin/\";\r\n\r\n// POST req to login\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(baseUrl, credentials);\r\n  return res.data;\r\n};\r\n\r\n// POST req to admin login\r\nconst adminLogin = async (credentials) => {\r\n  const config = helper.loggedUserConfig();\r\n  console.log(\"adminLoggedIN service, it reached here: \", credentials);\r\n  const res = await axios.post(adminUrl, credentials, config);\r\n  console.log(\"adminLoggedIN service: \", res.data);\r\n  return res.data;\r\n};\r\n\r\nexport default { login, adminLogin };\r\n","import loginService from \"../services/login\";\r\nimport helper from \"../helper/helper\";\r\n\r\n// setting a logged user in the store\r\nconst setUser = (user) => {\r\n  return {\r\n    type: \"SET_USER\",\r\n    user: user,\r\n  };\r\n};\r\n\r\n// Setting a user when signing in\r\nexport const signIn = (email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // Get User token from Server\r\n      const loggedUser = await loginService.login({ email, password });\r\n      // Save User in the Browser\r\n      window.localStorage.setItem(\r\n        \"loggedRatingAppUser\",\r\n        JSON.stringify(loggedUser)\r\n      );\r\n      dispatch(setUser(loggedUser));\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n};\r\n\r\n// User Logging Out\r\nexport const logOut = () => {\r\n  return async (dispatch) => {\r\n    await window.localStorage.removeItem(\"loggedRatingAppUser\");\r\n    dispatch({\r\n      type: \"CLEAR_USER\",\r\n      user: null,\r\n    });\r\n  };\r\n};\r\n\r\n// Checking if the user in loggedIn during reloads\r\nexport const setLoggedUser = () => {\r\n  return async (dispatch) => {\r\n    const user = helper.checkLogged();\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Setting a user ADMIN when signing in\r\nexport const adminSignIn = (adminPin) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // Get User token from Server\r\n      const loggedAdmin = await loginService.adminLogin({ adminPin });\r\n      // Save User in the Browser\r\n      window.localStorage.setItem(\r\n        \"loggedRatingAppAdmin\",\r\n        JSON.stringify(loggedAdmin)\r\n      );\r\n      dispatch(setUser(loggedAdmin));\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n};\r\n\r\n// Admin Logging Out\r\nexport const AdminLogOut = () => {\r\n  return async (dispatch) => {\r\n    await window.localStorage.removeItem(\"loggedRatingAppAdmin\");\r\n    const user = helper.checkLogged();\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Login Reducer\r\nconst loginReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.user;\r\n    case \"CLEAR_USER\":\r\n      return action.user;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signIn } from \"../reducers/login\";\r\n\r\nconst LoginForm = () => {\r\n  // Login Form input\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n\r\n  // Submit the Login Form\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    await dispatch(signIn(email, password));\r\n    // Clearing the Login Form\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Cancel the login process\r\n  const cancel = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h5>Login</h5>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={({ target }) => setEmail(target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n        <input type=\"submit\" />\r\n        <button onClick={cancel}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { adminSignIn } from \"../reducers/login\";\r\n\r\nconst AdminLoginForm = () => {\r\n  // Admin Pin input\r\n  const [adminPin, setAdminPin] = useState(\"\");\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n\r\n  // Submit the Login Form\r\n  const handleAdminLogin = async (event) => {\r\n    event.preventDefault();\r\n    dispatch(adminSignIn(adminPin));\r\n    // Clearing the Login Form\r\n    setAdminPin(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Cancel the login process\r\n  const cancel = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h5>Switch to Admin Mode</h5>\r\n      <form onSubmit={handleAdminLogin}>\r\n        <input\r\n          type=\"password\"\r\n          name=\"adminPin\"\r\n          placeholder=\"Admin Pin\"\r\n          value={adminPin}\r\n          onChange={({ target }) => setAdminPin(target.value)}\r\n        />\r\n        <input type=\"submit\" />\r\n        <button onClick={cancel}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLoginForm;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { logOut, AdminLogOut } from \"../reducers/login.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AdminLoginForm from \"./AdminLoginForm\";\r\n\r\nconst Auth = () => {\r\n  // Using History to redirect\r\n  const history = useHistory();\r\n  // To dispatch events\r\n  const dispatch = useDispatch();\r\n  // useSelector to fetch data\r\n  const loggedUser = useSelector((state) => state.logged);\r\n\r\n  // Logout function\r\n  const signout = (event) => {\r\n    event.preventDefault();\r\n    dispatch(logOut());\r\n  };\r\n\r\n  // User Sign OUt button\r\n  const signOutButton = () => {\r\n    return <button onClick={signout}>Logout</button>;\r\n  };\r\n\r\n  // Handle Admin switch to User\r\n  const switchToUser = (event) => {\r\n    event.preventDefault();\r\n    dispatch(AdminLogOut());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Check if the user is signedin or admin mode is on\r\n  const display = () => {\r\n    if (!loggedUser) {\r\n      return (\r\n        <div>\r\n          <LoginForm />\r\n        </div>\r\n      );\r\n    } else if (loggedUser.role === \"user\") {\r\n      return (\r\n        <div>\r\n          <AdminLoginForm />\r\n          {signOutButton()}\r\n        </div>\r\n      );\r\n    } else if (loggedUser.role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <button onClick={switchToUser}>User Mode</button>\r\n          {signOutButton()}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{display()}</div>;\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { initializeItems } from \"./reducers/items\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Items from \"./components/Items\";\r\nimport Item from \"./components/Item\";\r\nimport \"./App.css\";\r\nimport Auth from \"./components/Auth\";\r\nimport { setLoggedUser } from \"./reducers/login\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Fetching data\r\n  useEffect(() => {\r\n    dispatch(initializeItems());\r\n  }, [dispatch]);\r\n\r\n  // Setting up Logged In User\r\n  useEffect(() => {\r\n    dispatch(setLoggedUser());\r\n  }, [dispatch]);\r\n\r\n  // Logged in User\r\n  const logged = useSelector((state) => state.logged);\r\n  console.log(\"APP Logged: \", logged);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      Hello World!!\r\n      <Switch>\r\n        <Route path=\"/items/:id\">\r\n          <Item />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Auth />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Items />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport itemsReducer from \"./reducers/items\";\r\nimport loginReducer from \"./reducers/login\";\r\n\r\nconst reducer = combineReducers({\r\n  items: itemsReducer,\r\n  logged: loginReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}