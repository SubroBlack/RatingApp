{"version":3,"sources":["helper/helper.js","services/items.js","reducers/items.js","components/Item.js","components/Items.js","services/login.js","reducers/login.js","components/AdminLoginForm.js","components/Auth.js","components/LoginForm.js","components/AddItemForm.js","components/dashboard.js","components/EditItemForm.js","App.js","store.js","index.js"],"names":["checkLogged","loggedAdminJSON","window","localStorage","getItem","admin","JSON","parse","loggedUserJSON","user","token","loggedUserToken","headers","auth","baseUrl","getAll","a","config","helper","axios","get","response","data","id","addItem","item","console","log","role","Error","post","editItem","put","rateItem","rating","dispatch","itemService","newItem","type","editedItem","itemsReducer","state","action","concat","other","filter","Item","props","history","useHistory","push","key","name","category","description","onClick","Items","useState","singleItem","setSingleItem","useDispatch","logged","useSelector","useEffect","items","openItem","map","review","login","credentials","res","adminLogin","setUser","signIn","email","password","loginService","loggedUser","setItem","stringify","adminSignIn","adminPin","loggedAdmin","AdminLogOut","removeItem","loginReducer","AdminLoginForm","setAdminPin","handleAdminLogin","event","preventDefault","onSubmit","placeholder","value","onChange","target","Auth","form","setForm","signout","loginFormButton","switchToUser","toggleAdminForm","dashboard","LoginForm","setEmail","setPassword","handleLogin","AddItemForm","setName","setCategory","setDescription","submit","DashBoard","EditItemForm","itemId","useParams","App","className","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7bc358a.chunk.js","sourcesContent":["// Check loggedUser returns Admin if Admin Token is found else return User token else null\r\nconst checkLogged = () => {\r\n  const loggedAdminJSON = window.localStorage.getItem(\"loggedRatingAppAdmin\");\r\n  const admin = JSON.parse(loggedAdminJSON);\r\n  if (admin) {\r\n    return admin;\r\n  }\r\n  const loggedUserJSON = window.localStorage.getItem(\"loggedRatingAppUser\");\r\n  const user = JSON.parse(loggedUserJSON);\r\n  if (user) {\r\n    return user;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Token of the LoggedIn\r\nconst loggedUserToken = () => {\r\n  const user = checkLogged();\r\n  if (user) {\r\n    return `bearer ${user.token}`;\r\n  } else return null;\r\n};\r\n\r\nconst loggedUserConfig = () => {\r\n  const token = loggedUserToken();\r\n  if (token === null) {\r\n    return null;\r\n  }\r\n  const config = {\r\n    headers: { auth: token },\r\n  };\r\n  return config;\r\n};\r\n\r\nexport default { checkLogged, loggedUserConfig };\r\n","import axios from \"axios\";\r\nimport helper from \"../helper/helper\";\r\nconst baseUrl = \"/api/items\";\r\n\r\n// Fetching all the Items\r\nconst getAll = async () => {\r\n  const config = helper.loggedUserConfig();\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\n// Fetching a single item\r\nconst getItem = async (id) => {\r\n  const config = helper.loggedUserConfig();\r\n  const response = await axios.get(`${baseUrl}/${id}`, config);\r\n  return response.data;\r\n};\r\n\r\n// Adding an Item\r\nconst addItem = async (item) => {\r\n  const user = helper.checkLogged();\r\n  console.log(\"New Item to be sent: \", item);\r\n  if (user.role !== \"admin\") {\r\n    console.log(\"WOOPsss, it got caught: \", user.role);\r\n    throw new Error(\"Only Admin can Add Items\");\r\n  }\r\n  const config = helper.loggedUserConfig();\r\n  const response = await axios.post(baseUrl, item, config);\r\n  console.log(\"New Item Added: \", response.data);\r\n  return response.data;\r\n};\r\n\r\n// Editing an Item\r\nconst editItem = async (id, item) => {\r\n  const user = helper.checkLogged();\r\n  if (user.role !== \"admin\") {\r\n    console.log(\"WOOPsss, it got caught: \", user.role);\r\n    throw new Error(\"Only Admin can Add Items\");\r\n  }\r\n  const config = helper.loggedUserConfig();\r\n  const response = await axios.put(`${baseUrl}/${id}`, item, config);\r\n  return response.data;\r\n};\r\n\r\n// Rate an Item\r\nconst rateItem = async (id, rating) => {\r\n  const user = helper.checkLogged();\r\n  if (user.role !== \"user\") {\r\n    console.log(\"WOOPsss, it got caught: \", user.role);\r\n    throw new Error(\"Only User can Rate Items\");\r\n  }\r\n  const config = helper.loggedUserConfig();\r\n  const response = await axios.put(`${baseUrl}/rate/${id}`, rating, config);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, getItem, addItem, editItem, rateItem };\r\n","import itemService from \"../services/items\";\r\n\r\n// Initializing Items\r\nexport const allItems = () => {\r\n  return async (dispatch) => {\r\n    const items = await itemService.getAll();\r\n    dispatch({\r\n      type: \"ITEMS\",\r\n      data: items,\r\n    });\r\n  };\r\n};\r\n\r\n// Fetching a single Item\r\nexport const getItem = (id) => {\r\n  return async (dispatch) => {\r\n    const item = await itemService.getItem(id);\r\n    console.log(\"Single Item fetched: \", item);\r\n    dispatch({\r\n      type: \"GET_ITEM\",\r\n      data: item,\r\n    });\r\n  };\r\n};\r\n\r\n// Adding an Item\r\nexport const addItem = (item) => {\r\n  return async (dispatch) => {\r\n    const newItem = await itemService.addItem(item);\r\n    dispatch({\r\n      type: \"NEW\",\r\n      data: newItem,\r\n    });\r\n  };\r\n};\r\n\r\n// Editing an Item\r\nexport const editItem = (id, item) => {\r\n  return async (dispatch) => {\r\n    const editedItem = await itemService.editItem(id, item);\r\n    dispatch({\r\n      type: \"EDITED\",\r\n      data: editedItem,\r\n    });\r\n  };\r\n};\r\n\r\n// Rating an Item\r\nexport const rateItem = (id, rating) => {\r\n  return async (dispatch) => {\r\n    const ratedItem = await itemService.rateItem(id, rating);\r\n    dispatch({\r\n      type: \"EDITED\",\r\n      data: ratedItem,\r\n    });\r\n  };\r\n};\r\n\r\n// Items Reducer\r\nconst itemsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ITEMS\":\r\n      return action.data;\r\n    case \"GET_ITEM\":\r\n      return action.data;\r\n    case \"NEW\":\r\n      return state.concat(action.data);\r\n    case \"EDITED\":\r\n      const other = state.filter((item) => item.id !== action.data.id);\r\n      return other.concat(action.data);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReducer;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Item = (props) => {\r\n  const history = useHistory();\r\n  const item = props.item;\r\n\r\n  const editItem = () => {\r\n    history.push(`/edit/${item.id}`);\r\n  };\r\n\r\n  if (!item) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"Item: \", item);\r\n\r\n  const show = () => {\r\n    return (\r\n      <div key={item.id}>\r\n        <h3>Details</h3>\r\n        <b>{item.name}</b>\r\n        <h3>Category: {item.category}</h3>\r\n        <p>{item.description}</p>\r\n        <button onClick={editItem}>Edit</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Item;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { allItems } from \"../reducers/items\";\r\nimport Item from \"./Item\";\r\n\r\nconst Items = () => {\r\n  const [singleItem, setSingleItem] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Logged in User\r\n  const logged = useSelector((state) => state.logged);\r\n\r\n  // Fetching data according the role of user signed in\r\n  useEffect(() => {\r\n    dispatch(allItems());\r\n  }, [logged, dispatch]);\r\n\r\n  // Main Items to be reviewed\r\n  const items = useSelector((state) => state.items);\r\n\r\n  if (!items) {\r\n    return null;\r\n  }\r\n\r\n  const openItem = (item) => {\r\n    logged.role === \"admin\"\r\n      ? setSingleItem(item)\r\n      : console.log(\"Not Authorized\");\r\n  };\r\n\r\n  console.log(\"Items: \", items);\r\n\r\n  const show = () => {\r\n    if (singleItem) {\r\n      return (\r\n        <>\r\n          <Item item={singleItem} />\r\n          <button\r\n            onClick={() => {\r\n              openItem(null);\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </>\r\n      );\r\n    } else {\r\n      return items.map((item) => (\r\n        <div key={item.id}>\r\n          <h3 onClick={() => openItem(item)}> {item.name}</h3>\r\n          <b>{item.category}</b>\r\n          <p>{item.review ? \"Reviews stack returned \" : \"No Review Array\"}</p>\r\n        </div>\r\n      ));\r\n    }\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Items;\r\n","import axios from \"axios\";\r\nimport helper from \"../helper/helper\";\r\nconst baseUrl = \"/api/login\";\r\nconst adminUrl = \"/api/login/admin/\";\r\n\r\n// POST req to login\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(baseUrl, credentials);\r\n  return res.data;\r\n};\r\n\r\n// POST req to admin login\r\nconst adminLogin = async (credentials) => {\r\n  const config = helper.loggedUserConfig(); // Passing user token\r\n  const res = await axios.post(adminUrl, credentials, config);\r\n  return res.data;\r\n};\r\n\r\nexport default { login, adminLogin };\r\n","import loginService from \"../services/login\";\r\nimport helper from \"../helper/helper\";\r\n\r\n// setting a logged user in the store\r\nconst setUser = (user) => {\r\n  return {\r\n    type: \"SET_USER\",\r\n    user: user,\r\n  };\r\n};\r\n\r\n// Setting a user when signing in\r\nexport const signIn = (email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // Get User token from Server\r\n      const loggedUser = await loginService.login({ email, password });\r\n      // Save User in the Browser\r\n      window.localStorage.setItem(\r\n        \"loggedRatingAppUser\",\r\n        JSON.stringify(loggedUser)\r\n      );\r\n      dispatch(setUser(loggedUser));\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n};\r\n\r\n// User Logging Out\r\nexport const logOut = () => {\r\n  return async (dispatch) => {\r\n    await window.localStorage.removeItem(\"loggedRatingAppAdmin\");\r\n    await window.localStorage.removeItem(\"loggedRatingAppUser\");\r\n    const user = helper.checkLogged();\r\n    await dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Checking if the user in loggedIn during reloads\r\nexport const setLoggedUser = () => {\r\n  return async (dispatch) => {\r\n    const user = helper.checkLogged();\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Setting a user ADMIN when signing in\r\nexport const adminSignIn = (adminPin) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // Get User token from Server\r\n      const loggedAdmin = await loginService.adminLogin({ adminPin });\r\n      // Save User in the Browser\r\n      window.localStorage.setItem(\r\n        \"loggedRatingAppAdmin\",\r\n        JSON.stringify(loggedAdmin)\r\n      );\r\n      dispatch(setUser(loggedAdmin));\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n};\r\n\r\n// Admin Logging Out\r\nexport const AdminLogOut = () => {\r\n  return async (dispatch) => {\r\n    await window.localStorage.removeItem(\"loggedRatingAppAdmin\");\r\n    const user = helper.checkLogged();\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Login Reducer\r\nconst loginReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.user;\r\n    case \"CLEAR_USER\":\r\n      return action.user;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { adminSignIn } from \"../reducers/login\";\r\n\r\nconst AdminLoginForm = () => {\r\n  // Admin Pin input\r\n  const [adminPin, setAdminPin] = useState(\"\");\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n\r\n  // Submit the Login Form\r\n  const handleAdminLogin = async (event) => {\r\n    event.preventDefault();\r\n    dispatch(adminSignIn(adminPin));\r\n    // Clearing the Login Form\r\n    setAdminPin(\"\");\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleAdminLogin}>\r\n        <input\r\n          type=\"password\"\r\n          name=\"adminPin\"\r\n          placeholder=\"Admin Pin\"\r\n          value={adminPin}\r\n          onChange={({ target }) => setAdminPin(target.value)}\r\n        />\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logOut, AdminLogOut } from \"../reducers/login.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AdminLoginForm from \"./AdminLoginForm\";\r\n\r\nconst Auth = () => {\r\n  // Using History to redirect\r\n  const history = useHistory();\r\n  // To dispatch events\r\n  const dispatch = useDispatch();\r\n  // useSelector to fetch data\r\n  const loggedUser = useSelector((state) => state.logged);\r\n\r\n  const [form, setForm] = useState(false);\r\n\r\n  // Logout function\r\n  const signout = async (event) => {\r\n    event.preventDefault();\r\n    await dispatch(AdminLogOut());\r\n    await dispatch(logOut());\r\n    setForm(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // User Login Form button\r\n  const loginFormButton = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  // Handle Admin switch to User\r\n  const switchToUser = (event) => {\r\n    event.preventDefault();\r\n    dispatch(AdminLogOut());\r\n    setForm(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Show Admin Login Form\r\n  const toggleAdminForm = () => {\r\n    setForm(!form);\r\n  };\r\n\r\n  // Goto Dashboard\r\n  const dashboard = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  // Check if the user is signedin or admin mode is on\r\n  const display = () => {\r\n    if (!loggedUser) {\r\n      return (\r\n        <div>\r\n          <button onClick={loginFormButton}>SignIn</button>\r\n        </div>\r\n      );\r\n    } else if (loggedUser.role === \"user\") {\r\n      return (\r\n        <div>\r\n          {form ? (\r\n            <>\r\n              <AdminLoginForm />\r\n              <button onClick={toggleAdminForm}>Cancel</button>\r\n            </>\r\n          ) : (\r\n            <button onClick={toggleAdminForm}>Switch to Admin</button>\r\n          )}\r\n          <button onClick={signout}>Logout</button>\r\n        </div>\r\n      );\r\n    } else if (loggedUser.role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <button onClick={switchToUser}>User Mode</button>\r\n          <button onClick={signout}>Logout</button>\r\n          <button onClick={dashboard}>Dashboard</button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{display()}</div>;\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signIn } from \"../reducers/login\";\r\n\r\nconst LoginForm = () => {\r\n  // Login Form input\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n\r\n  // Submit the Login Form\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    await dispatch(signIn(email, password));\r\n    // Clearing the Login Form\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Cancel the login process\r\n  const cancel = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h5>Login</h5>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={({ target }) => setEmail(target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n        <input type=\"submit\" />\r\n        <button onClick={cancel}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addItem } from \"../reducers/items\";\r\n\r\nconst AddItemForm = () => {\r\n  // Login Form input\r\n  const [name, setName] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n\r\n  // Logged in User\r\n  const logged = useSelector((state) => state.logged);\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n\r\n  if (!logged) {\r\n    return <h5>Sign In</h5>;\r\n  } else if (logged.role !== \"admin\") {\r\n    return <h5>Sign In to Admin mode</h5>;\r\n  }\r\n\r\n  // Submit the Add Item Form\r\n  const submit = async (event) => {\r\n    event.preventDefault();\r\n    await dispatch(addItem({ name, category, description }));\r\n    // Clearing the Login Form\r\n    setName(\"\");\r\n    setCategory(\"\");\r\n    setDescription(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Cancel the add Item process\r\n  const cancel = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h5>Add New Service</h5>\r\n      <form onSubmit={submit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Title\"\r\n          value={name}\r\n          onChange={({ target }) => setName(target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"category\"\r\n          placeholder=\"Category\"\r\n          value={category}\r\n          onChange={({ target }) => setCategory(target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={({ target }) => setDescription(target.value)}\r\n        />\r\n        <br />\r\n        <input type=\"submit\" />\r\n        <br />\r\n        <button onClick={cancel}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItemForm;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst DashBoard = () => {\r\n  // useHistory hook for redirections\r\n  const history = useHistory();\r\n\r\n  // Form to add New Items for review\r\n  const addItemForm = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/addItem\");\r\n  };\r\n  return (\r\n    <>\r\n      <h5>DashBoard</h5>\r\n      <button onClick={addItemForm}>Add an Item</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getItem, editItem } from \"../reducers/items\";\r\n\r\nconst EditItemForm = () => {\r\n  // Login Form input\r\n  const [name, setName] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n  const itemId = useParams().id;\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n  // Logged in User\r\n  const logged = useSelector((state) => state.logged);\r\n\r\n  // The Item being edited\r\n  useEffect(() => {\r\n    dispatch(getItem(itemId));\r\n  }, [dispatch, itemId, logged]);\r\n\r\n  // THe item\r\n  const item = useSelector((state) => state.items)[0];\r\n\r\n  if (!logged) {\r\n    return <h5>Sign In</h5>;\r\n  } else if (logged.role !== \"admin\") {\r\n    return <h5>Sign In to Admin mode</h5>;\r\n  }\r\n\r\n  if (!item) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"edit item form: \", item);\r\n\r\n  // Submit the Add Item Form\r\n  const submit = async (event) => {\r\n    event.preventDefault();\r\n    const editedItem = {\r\n      name: name === \"\" ? item.name : name,\r\n      category: category === \"\" ? item.category : category,\r\n      description: description === \"\" ? item.description : description,\r\n      //review: item.review,\r\n      //user: item.user,\r\n    };\r\n\r\n    await dispatch(editItem(item.id, editedItem));\r\n    // Clearing the Login Form\r\n    setName(\"\");\r\n    setCategory(\"\");\r\n    setDescription(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Cancel the add Item process\r\n  const cancel = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h5>Editing {item.name}</h5>\r\n\r\n      <form onSubmit={submit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Title\"\r\n          value={name}\r\n          onChange={({ target }) => setName(target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"category\"\r\n          placeholder=\"Category\"\r\n          value={category}\r\n          onChange={({ target }) => setCategory(target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={({ target }) => setDescription(target.value)}\r\n        />\r\n        <br />\r\n        <input type=\"submit\" />\r\n        <br />\r\n        <button onClick={cancel}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditItemForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Items from \"./components/Items\";\r\nimport \"./App.css\";\r\nimport Auth from \"./components/Auth\";\r\nimport { setLoggedUser } from \"./reducers/login\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport AddItemForm from \"./components/AddItemForm\";\r\nimport DashBoard from \"./components/dashboard\";\r\nimport EditItemForm from \"./components/EditItemForm\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Setting up Logged In User\r\n  useEffect(() => {\r\n    dispatch(setLoggedUser());\r\n  }, [dispatch]);\r\n\r\n  // Logged in User\r\n  const logged = useSelector((state) => state.logged);\r\n  console.log(\"APP Logged: \", logged);\r\n\r\n  const gotoHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2 onClick={gotoHome}>Rating App</h2>\r\n      <Auth />\r\n      <Switch>\r\n        <Route path=\"/addItem/\">\r\n          <AddItemForm />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <LoginForm />\r\n        </Route>\r\n        <Route path=\"/edit/:id\">\r\n          <EditItemForm />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <DashBoard />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Items />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport itemsReducer from \"./reducers/items\";\r\nimport loginReducer from \"./reducers/login\";\r\n\r\nconst reducer = combineReducers({\r\n  items: itemsReducer,\r\n  logged: loginReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}