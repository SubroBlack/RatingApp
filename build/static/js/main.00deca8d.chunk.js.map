{"version":3,"sources":["services/items.js","reducers/items.js","components/Items.js","components/Item.js","App.js","store.js","index.js"],"names":["getAll","a","axios","get","response","data","getItem","id","itemsReducer","state","action","type","Items","items","useSelector","console","log","map","item","key","to","name","category","Item","itemId","useParams","find","description","App","dispatch","useDispatch","useEffect","itemService","className","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAae,GAAEA,OAVL,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAHf,cAED,cACPC,EADO,yBAENA,EAASC,MAFH,2CAAH,qDAUaC,QALZ,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACSC,IAAMC,IAAN,UART,aAQS,YAAwBI,IADjC,cACRH,EADQ,yBAEPA,EAASC,MAFF,2CAAH,uDCyBEG,EAXM,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,IAAK,aAEL,IAAK,WACH,OAAOD,EAAOL,KAChB,QACE,OAAOI,ICDEG,EAxBD,WAEZ,IAAMC,EAAQC,aAAY,SAACL,GAAD,OAAWA,EAAMI,SAE3C,IAAKA,EACH,OAAO,KAGTE,QAAQC,IAAI,UAAWH,GAavB,OAAO,6BAVEA,EAAMI,KAAI,SAACC,GAAD,OACf,yBAAKC,IAAKD,EAAKX,IACb,kBAAC,IAAD,CAAMa,GAAE,iBAAYF,EAAKX,KACvB,+BAAKW,EAAKG,OAEZ,4BAAKH,EAAKI,gBCWHC,EA3BF,WAEX,IAAMV,EAAQC,aAAY,SAACL,GAAD,OAAWA,EAAMI,SAErCW,EAASC,cAAYlB,GACrBW,EAAOL,EAAMa,MAAK,SAACR,GAAD,OAAUA,EAAKX,KAAOiB,KAE9C,IAAKN,EACH,OAAO,KAGTH,QAAQC,IAAI,SAAUE,GAatB,OAAO,6BATH,yBAAKC,IAAKD,EAAKX,IACb,uCACA,2BAAIW,EAAKG,MACT,4BAAKH,EAAKI,UACV,2BAAIJ,EAAKS,gBCQFC,G,MAvBH,WACV,IAAMC,EAAWC,cAOjB,OAJAC,qBAAU,WACRF,EHVF,uCAAO,WAAOA,GAAP,eAAA5B,EAAA,sEACe+B,EAAYhC,SAD3B,OACCa,EADD,OAELgB,EAAS,CACPlB,KAAM,aACNN,KAAMQ,IAJH,2CAAP,yDGWG,CAACgB,IAGF,yBAAKI,UAAU,OAAf,gBAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,W,wBCjBJC,EAAUC,0BAAgB,CAC9BvB,MAAOL,IAKM6B,EAFDC,sBAAYH,EAASI,8BAAoBC,0BAAgBC,OCHvEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,SAINQ,SAASC,eAAe,W","file":"static/js/main.00deca8d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/items\";\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst getItem = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, getItem };\r\n","import itemService from \"../services/items\";\r\n\r\nexport const initializeItems = () => {\r\n  return async (dispatch) => {\r\n    const items = await itemService.getAll();\r\n    dispatch({\r\n      type: \"INIT_ITEMS\",\r\n      data: items,\r\n    });\r\n  };\r\n};\r\n\r\nexport const getItem = (id) => {\r\n  return async (dispatch) => {\r\n    const item = await itemService.getItem(id);\r\n    dispatch({\r\n      type: \"GET_ITEM\",\r\n      data: item,\r\n    });\r\n  };\r\n};\r\n\r\nconst itemsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_ITEMS\":\r\n      return action.data;\r\n    case \"GET_ITEM\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReducer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Items = () => {\r\n  // Main Items to be reviewed\r\n  const items = useSelector((state) => state.items);\r\n\r\n  if (!items) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"Items: \", items);\r\n\r\n  const show = () => {\r\n    return items.map((item) => (\r\n      <div key={item.id}>\r\n        <Link to={`/items/${item.id}`}>\r\n          <b> {item.name}</b>\r\n        </Link>\r\n        <h3>{item.category}</h3>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Item = () => {\r\n  // Main Items to be reviewed\r\n  const items = useSelector((state) => state.items);\r\n  // Item to be shown\r\n  const itemId = useParams().id;\r\n  const item = items.find((item) => item.id === itemId);\r\n\r\n  if (!item) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"Item: \", item);\r\n\r\n  const show = () => {\r\n    return (\r\n      <div key={item.id}>\r\n        <h3>Details</h3>\r\n        <b>{item.name}</b>\r\n        <h3>{item.category}</h3>\r\n        <p>{item.description}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Item;\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { initializeItems } from \"./reducers/items\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Items from \"./components/Items\";\r\nimport Item from \"./components/Item\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Fetching data\r\n  useEffect(() => {\r\n    dispatch(initializeItems());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      Hello World!!\r\n      <Switch>\r\n        <Route path=\"/items/:id\">\r\n          <Item />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Items />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport itemsReducer from \"./reducers/items\";\r\n\r\nconst reducer = combineReducers({\r\n  items: itemsReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}