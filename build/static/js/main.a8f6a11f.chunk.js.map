{"version":3,"sources":["helper/helper.js","services/items.js","reducers/items.js","components/Items.js","components/Item.js","services/login.js","reducers/login.js","components/AdminLoginForm.js","components/Auth.js","components/LoginForm.js","App.js","store.js","index.js"],"names":["checkLogged","loggedAdminJSON","window","localStorage","getItem","admin","JSON","parse","loggedUserJSON","user","token","loggedUserToken","headers","auth","getAll","a","config","helper","axios","get","response","data","id","itemsReducer","state","action","type","Items","dispatch","useDispatch","logged","useSelector","useEffect","itemService","items","console","log","map","item","key","to","name","category","review","Item","itemId","useParams","find","description","login","credentials","post","res","adminLogin","setUser","signIn","email","password","loginService","loggedUser","setItem","stringify","adminSignIn","adminPin","loggedAdmin","AdminLogOut","removeItem","loginReducer","AdminLoginForm","useState","setAdminPin","history","useHistory","handleAdminLogin","event","preventDefault","push","onSubmit","placeholder","value","onChange","target","Auth","form","setForm","signout","loginFormButton","switchToUser","toggleAdminForm","role","onClick","LoginForm","setEmail","setPassword","handleLogin","App","className","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8f6a11f.chunk.js","sourcesContent":["// Check loggedUser returns Admin if Admin Token is found else return User token else null\r\nconst checkLogged = () => {\r\n  const loggedAdminJSON = window.localStorage.getItem(\"loggedRatingAppAdmin\");\r\n  const admin = JSON.parse(loggedAdminJSON);\r\n  if (admin) {\r\n    return admin;\r\n  }\r\n  const loggedUserJSON = window.localStorage.getItem(\"loggedRatingAppUser\");\r\n  const user = JSON.parse(loggedUserJSON);\r\n  if (user) {\r\n    return user;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Token of the LoggedIn\r\nconst loggedUserToken = () => {\r\n  const user = checkLogged();\r\n  if (user) {\r\n    return `bearer ${user.token}`;\r\n  } else return null;\r\n};\r\n\r\nconst loggedUserConfig = () => {\r\n  const token = loggedUserToken();\r\n  if (token === null) {\r\n    return null;\r\n  }\r\n  const config = {\r\n    headers: { auth: token },\r\n  };\r\n  return config;\r\n};\r\n\r\nexport default { checkLogged, loggedUserConfig };\r\n","import axios from \"axios\";\r\nimport helper from \"../helper/helper\";\r\nconst baseUrl = \"/api/items\";\r\n\r\n// Fetching all the Items\r\nconst getAll = async () => {\r\n  const config = helper.loggedUserConfig();\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\n// Fetching a single item\r\nconst getItem = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, getItem };\r\n","import itemService from \"../services/items\";\r\n\r\n// Initializing Items\r\nexport const initializeItems = () => {\r\n  return async (dispatch) => {\r\n    const items = await itemService.getAll();\r\n    dispatch({\r\n      type: \"INIT_ITEMS\",\r\n      data: items,\r\n    });\r\n  };\r\n};\r\n\r\n// Fetching a single Item\r\nexport const getItem = (id) => {\r\n  return async (dispatch) => {\r\n    const item = await itemService.getItem(id);\r\n    dispatch({\r\n      type: \"GET_ITEM\",\r\n      data: item,\r\n    });\r\n  };\r\n};\r\n\r\n// Items Reducer\r\nconst itemsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"INIT_ITEMS\":\r\n      return action.data;\r\n    case \"GET_ITEM\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { initializeItems } from \"../reducers/items\";\r\n\r\nconst Items = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Logged in User\r\n  const logged = useSelector((state) => state.logged);\r\n\r\n  // Fetching data according the role of user signed in\r\n  useEffect(() => {\r\n    dispatch(initializeItems());\r\n  }, [logged, dispatch]);\r\n\r\n  // Main Items to be reviewed\r\n  const items = useSelector((state) => state.items);\r\n\r\n  if (!items) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"Items: \", items);\r\n\r\n  const show = () => {\r\n    return items.map((item) => (\r\n      <div key={item.id}>\r\n        <Link to={`/items/${item.id}`}>\r\n          <b> {item.name}</b>\r\n        </Link>\r\n        <h3>{item.category}</h3>\r\n        <p>{item.review ? \"Reviews stack returned \" : \"No Review Array\"}</p>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Item = () => {\r\n  // Main Items to be reviewed\r\n  const items = useSelector((state) => state.items);\r\n  // Item to be shown\r\n  const itemId = useParams().id;\r\n  const item = items.find((item) => item.id === itemId);\r\n\r\n  if (!item) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\"Item: \", item);\r\n\r\n  const show = () => {\r\n    return (\r\n      <div key={item.id}>\r\n        <h3>Details</h3>\r\n        <b>{item.name}</b>\r\n        <h3>Category: {item.category}</h3>\r\n        <p>{item.description}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{show()}</div>;\r\n};\r\n\r\nexport default Item;\r\n","import axios from \"axios\";\r\nimport helper from \"../helper/helper\";\r\nconst baseUrl = \"/api/login\";\r\nconst adminUrl = \"/api/login/admin/\";\r\n\r\n// POST req to login\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(baseUrl, credentials);\r\n  return res.data;\r\n};\r\n\r\n// POST req to admin login\r\nconst adminLogin = async (credentials) => {\r\n  const config = helper.loggedUserConfig(); // Passing user token\r\n  const res = await axios.post(adminUrl, credentials, config);\r\n  return res.data;\r\n};\r\n\r\nexport default { login, adminLogin };\r\n","import loginService from \"../services/login\";\r\nimport helper from \"../helper/helper\";\r\n\r\n// setting a logged user in the store\r\nconst setUser = (user) => {\r\n  return {\r\n    type: \"SET_USER\",\r\n    user: user,\r\n  };\r\n};\r\n\r\n// Setting a user when signing in\r\nexport const signIn = (email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // Get User token from Server\r\n      const loggedUser = await loginService.login({ email, password });\r\n      // Save User in the Browser\r\n      window.localStorage.setItem(\r\n        \"loggedRatingAppUser\",\r\n        JSON.stringify(loggedUser)\r\n      );\r\n      dispatch(setUser(loggedUser));\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n};\r\n\r\n// User Logging Out\r\nexport const logOut = () => {\r\n  return async (dispatch) => {\r\n    await window.localStorage.removeItem(\"loggedRatingAppAdmin\");\r\n    await window.localStorage.removeItem(\"loggedRatingAppUser\");\r\n    const user = helper.checkLogged();\r\n    await dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Checking if the user in loggedIn during reloads\r\nexport const setLoggedUser = () => {\r\n  return async (dispatch) => {\r\n    const user = helper.checkLogged();\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Setting a user ADMIN when signing in\r\nexport const adminSignIn = (adminPin) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // Get User token from Server\r\n      const loggedAdmin = await loginService.adminLogin({ adminPin });\r\n      // Save User in the Browser\r\n      window.localStorage.setItem(\r\n        \"loggedRatingAppAdmin\",\r\n        JSON.stringify(loggedAdmin)\r\n      );\r\n      dispatch(setUser(loggedAdmin));\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n};\r\n\r\n// Admin Logging Out\r\nexport const AdminLogOut = () => {\r\n  return async (dispatch) => {\r\n    await window.localStorage.removeItem(\"loggedRatingAppAdmin\");\r\n    const user = helper.checkLogged();\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\n// Login Reducer\r\nconst loginReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.user;\r\n    case \"CLEAR_USER\":\r\n      return action.user;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { adminSignIn } from \"../reducers/login\";\r\n\r\nconst AdminLoginForm = () => {\r\n  // Admin Pin input\r\n  const [adminPin, setAdminPin] = useState(\"\");\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n\r\n  // Submit the Login Form\r\n  const handleAdminLogin = async (event) => {\r\n    event.preventDefault();\r\n    dispatch(adminSignIn(adminPin));\r\n    // Clearing the Login Form\r\n    setAdminPin(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleAdminLogin}>\r\n        <input\r\n          type=\"password\"\r\n          name=\"adminPin\"\r\n          placeholder=\"Admin Pin\"\r\n          value={adminPin}\r\n          onChange={({ target }) => setAdminPin(target.value)}\r\n        />\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logOut, AdminLogOut } from \"../reducers/login.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AdminLoginForm from \"./AdminLoginForm\";\r\n\r\nconst Auth = () => {\r\n  // Using History to redirect\r\n  const history = useHistory();\r\n  // To dispatch events\r\n  const dispatch = useDispatch();\r\n  // useSelector to fetch data\r\n  const loggedUser = useSelector((state) => state.logged);\r\n\r\n  const [form, setForm] = useState(false);\r\n\r\n  // Logout function\r\n  const signout = async (event) => {\r\n    event.preventDefault();\r\n    await dispatch(AdminLogOut());\r\n    await dispatch(logOut());\r\n    setForm(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // User Login Form button\r\n  const loginFormButton = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  // Handle Admin switch to User\r\n  const switchToUser = (event) => {\r\n    event.preventDefault();\r\n    dispatch(AdminLogOut());\r\n    setForm(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Show Admin Login Form\r\n  const toggleAdminForm = () => {\r\n    setForm(!form);\r\n  };\r\n\r\n  // Check if the user is signedin or admin mode is on\r\n  const display = () => {\r\n    if (!loggedUser) {\r\n      return (\r\n        <div>\r\n          <button onClick={loginFormButton}>SignIn</button>\r\n        </div>\r\n      );\r\n    } else if (loggedUser.role === \"user\") {\r\n      return (\r\n        <div>\r\n          {form ? (\r\n            <>\r\n              <AdminLoginForm />\r\n              <button onClick={toggleAdminForm}>Cancel</button>\r\n            </>\r\n          ) : (\r\n            <button onClick={toggleAdminForm}>Switch to Admin</button>\r\n          )}\r\n          <button onClick={signout}>Logout</button>\r\n        </div>\r\n      );\r\n    } else if (loggedUser.role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <button onClick={switchToUser}>User Mode</button>\r\n          <button onClick={signout}>Logout</button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{display()}</div>;\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signIn } from \"../reducers/login\";\r\n\r\nconst LoginForm = () => {\r\n  // Login Form input\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // useDispatch hook to dispatch the Action\r\n  const dispatch = useDispatch();\r\n\r\n  // useHistory to redirect\r\n  const history = useHistory();\r\n\r\n  // Submit the Login Form\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    await dispatch(signIn(email, password));\r\n    // Clearing the Login Form\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Cancel the login process\r\n  const cancel = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h5>Login</h5>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={({ target }) => setEmail(target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n        <input type=\"submit\" />\r\n        <button onClick={cancel}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Items from \"./components/Items\";\r\nimport Item from \"./components/Item\";\r\nimport \"./App.css\";\r\nimport Auth from \"./components/Auth\";\r\nimport { setLoggedUser } from \"./reducers/login\";\r\nimport LoginForm from \"./components/LoginForm\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Setting up Logged In User\r\n  useEffect(() => {\r\n    dispatch(setLoggedUser());\r\n  }, [dispatch]);\r\n\r\n  // Logged in User\r\n  const logged = useSelector((state) => state.logged);\r\n  console.log(\"APP Logged: \", logged);\r\n\r\n  const gotoHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2 onClick={gotoHome}>Rating App</h2>\r\n      <Auth />\r\n      <Switch>\r\n        <Route path=\"/items/:id\">\r\n          <Item />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <LoginForm />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Items />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport itemsReducer from \"./reducers/items\";\r\nimport loginReducer from \"./reducers/login\";\r\n\r\nconst reducer = combineReducers({\r\n  items: itemsReducer,\r\n  logged: loginReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}